public static CombatStyleId AddCombatStyleSet(Tyche tyche, ref int ratingPool, Unit unit, UnitSlotId slotId, CombatStyleId excludedCombatStyleId = CombatStyleId.NONE, ItemQualityId qualityId = ItemQualityId.NORMAL, bool generateRuneMark = false, List<Item> newItems = null)
	{
		PandoraDebug.LogInfo("Add combat style set for " + unit.Data.Id, "uncategorised", null);
		List<UnitJoinCombatStyleData> list = PandoraSingleton<DataFactory>.Instance.InitData<UnitJoinCombatStyleData>("fk_unit_id", ((int)unit.Data.Id).ToConstantString());
		List<UnitJoinCombatStyleData> list2 = new List<UnitJoinCombatStyleData>();
		bool flag = unit.GetMutationId(UnitSlotId.SET1_MAINHAND) != MutationId.NONE;
		bool flag2 = unit.GetMutationId(UnitSlotId.SET1_OFFHAND) != MutationId.NONE || unit.GetInjury(UnitSlotId.SET1_OFFHAND) != InjuryId.NONE;
		for (int i = 0; i < list.Count; i++)
		{
			if (list[i].CombatStyleId != excludedCombatStyleId)
			{
				CombatStyleData combatStyleData = PandoraSingleton<DataFactory>.Instance.InitData<CombatStyleData>((int)list[i].CombatStyleId);
				if (!flag || combatStyleData.ItemTypeIdMain == ItemTypeId.MELEE_1H)
				{
					if (flag2)
					{
						if (combatStyleData.ItemTypeIdOff != ItemTypeId.MELEE_1H)
						{
							goto IL_11B;
						}
						if (combatStyleData.ItemTypeIdMain != ItemTypeId.MELEE_1H)
						{
							goto IL_11B;
						}
					}
					if (excludedCombatStyleId < CombatStyleId.RANGE || list[i].CombatStyleId < CombatStyleId.RANGE)
					{
						list2.Add(list[i]);
					}
				}
			}
			IL_11B:;
		}
		if (list2.Count == 0)
		{
			return CombatStyleId.NONE;
		}
		UnitJoinCombatStyleData randomRatio = UnitJoinCombatStyleData.GetRandomRatio(list2, tyche, null);
		if (excludedCombatStyleId != CombatStyleId.NONE && excludedCombatStyleId < CombatStyleId.RANGE && randomRatio.CombatStyleId < CombatStyleId.RANGE)
		{
			return CombatStyleId.NONE;
		}
		CombatStyleData combatStyleData2 = PandoraSingleton<DataFactory>.Instance.InitData<CombatStyleData>((int)randomRatio.CombatStyleId);
		PandoraDebug.LogInfo(string.Concat(new object[]
		{
			"Using combat style ",
			combatStyleData2.Id,
			" for unit ",
			unit.Data.Id
		}), "uncategorised", null);
		Item procItem = UnitFactory.GetProcItem(tyche, ref ratingPool, unit, combatStyleData2.UnitSlotIdMain, combatStyleData2.ItemTypeIdMain, qualityId, generateRuneMark, flag);
		unit.EquipItem(slotId, procItem, true);
		if (newItems != null)
		{
			newItems.Add(procItem);
		}
		if (combatStyleData2.ItemTypeIdOff != ItemTypeId.NONE)
		{
			procItem = UnitFactory.GetProcItem(tyche, ref ratingPool, unit, combatStyleData2.UnitSlotIdOff, combatStyleData2.ItemTypeIdOff, qualityId, generateRuneMark, flag2);
			unit.EquipItem(slotId + 1, procItem, true);
			if (newItems != null)
			{
				newItems.Add(procItem);
			}
		}
		return combatStyleData2.Id;
	}